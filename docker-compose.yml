services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "5173:5173"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PORT=3000
      - DB_HOST=mysql  # Use container name as host in Docker network
      - DB_PORT=3306   # Default MySQL port inside the container
      - DB_USER=times1000
      - DB_PASSWORD=times1000_password
      - DB_NAME=times1000
      - NODE_ENV=development
      - VITE_SERVER_URL=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DEFAULT_LLM_PROVIDER=${DEFAULT_LLM_PROVIDER:-openai}
      - ENABLE_CODE_EXECUTION=${ENABLE_CODE_EXECUTION:-true}
      - CODE_EXECUTION_PATH=/app/generated-code
      - MCP_MEMORY_URL=${MCP_MEMORY_URL:-http://host.docker.internal:3002}
      - MCP_FILESYSTEM_URL=${MCP_FILESYSTEM_URL:-http://host.docker.internal:3003}
      - MCP_PLAYWRIGHT_URL=${MCP_PLAYWRIGHT_URL:-http://host.docker.internal:3004}
      - MCP_GITHUB_URL=${MCP_GITHUB_URL:-http://host.docker.internal:3005}
    volumes:
      - ./:/app
      - /app/node_modules
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow access to host services

  mysql:
    image: mysql:8.4
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=times1000
      - MYSQL_USER=times1000
      - MYSQL_PASSWORD=times1000_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "times1000", "-ptimes1000_password"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

volumes:
  mysql_data: